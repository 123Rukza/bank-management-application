<?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI (http://jax-ws.java.net). RI's version is Metro/2.3.2-b608 (trunk-7979; 2015-01-21T12:50:19+0000) JAXWS-RI/2.2.11-b150120.1832 JAXWS-API/2.2.12 JAXB-RI/2.2.12-b141219.1637 JAXB-API/2.2.13-b141020.1521 svn-revision#unknown. --><xs:schema xmlns:tns="http://bankapplication.frostmourne.com/" xmlns:xs="http://www.w3.org/2001/XMLSchema" version="1.0" targetNamespace="http://bankapplication.frostmourne.com/">

<xs:element name="UsernamePasswordException" type="tns:UsernamePasswordException"/>

<xs:element name="checkEmployeeExists" type="tns:checkEmployeeExists"/>

<xs:element name="checkEmployeeExistsResponse" type="tns:checkEmployeeExistsResponse"/>

<xs:element name="checkUser" type="tns:checkUser"/>

<xs:element name="checkUserResponse" type="tns:checkUserResponse"/>

<xs:element name="createEmployee" type="tns:createEmployee"/>

<xs:element name="createEmployeeResponse" type="tns:createEmployeeResponse"/>

<xs:element name="deleteEmployee" type="tns:deleteEmployee"/>

<xs:element name="deleteEmployeeResponse" type="tns:deleteEmployeeResponse"/>

<xs:element name="employeeLogout" type="tns:employeeLogout"/>

<xs:element name="employeeLogoutResponse" type="tns:employeeLogoutResponse"/>

<xs:element name="login" type="tns:login"/>

<xs:element name="loginResponse" type="tns:loginResponse"/>

<xs:element name="updateEmployee" type="tns:updateEmployee"/>

<xs:element name="updateEmployeeResponse" type="tns:updateEmployeeResponse"/>

<xs:complexType name="createEmployee">
<xs:sequence>
<xs:element name="name" type="xs:string" minOccurs="0"/>
<xs:element name="position" type="xs:string" minOccurs="0"/>
<xs:element name="username" type="xs:string" minOccurs="0"/>
<xs:element name="password" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="createEmployeeResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="employeeLogout">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="employeeLogoutResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="deleteEmployee">
<xs:sequence>
<xs:element name="username" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="deleteEmployeeResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="login">
<xs:sequence>
<xs:element name="username" type="xs:string" minOccurs="0"/>
<xs:element name="password" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="loginResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="UsernamePasswordException">
<xs:sequence>
<xs:element name="message" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="checkUser">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="checkUserResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="updateEmployee">
<xs:sequence>
<xs:element name="name" type="xs:string" minOccurs="0"/>
<xs:element name="position" type="xs:string" minOccurs="0"/>
<xs:element name="usernameNew" type="xs:string" minOccurs="0"/>
<xs:element name="usernameOld" type="xs:string" minOccurs="0"/>
<xs:element name="password" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="updateEmployeeResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="checkEmployeeExists">
<xs:sequence>
<xs:element name="username" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="checkEmployeeExistsResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean" minOccurs="0"/>
</xs:sequence>
</xs:complexType>
</xs:schema>